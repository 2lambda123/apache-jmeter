//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.03 at 07:33:19 GMT-05:00 
//


package org.apache.jorphan.tomcat.manager.impl;

public class WorkersImpl implements org.apache.jorphan.tomcat.manager.Workers, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Worker = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00fd\u00b0=ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fd\u00b0:pp\u0000sq\u0000~\u0000\u0006\u0000\u00fd\u00b0/pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fd\u00b0$ppsq\u0000~\u0000\u0000\u0000\u00fd\u00b0\u0019sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000\u00fd\u00b0\u0016q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0015psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001cxq\u0000~\u0000\u0017t\u0000(org.apache.jorphan.tomcat.manager.Workert\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001bt\u0000\u0006workert\u0000\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000$[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u000eppppppppppq\u0000~\u0000\rppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return org.apache.jorphan.tomcat.manager.Workers.class;
    }

    public java.util.List getWorker() {
        return _Worker;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new org.apache.jorphan.tomcat.manager.impl.WorkersImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Worker.size();
        while (idx1 != len1) {
            if (_Worker.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Worker.get(idx1 ++)));
            } else {
                context.startElement("", "worker");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Worker.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Worker.get(idx1 ++)));
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Worker.size();
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Worker.size();
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.apache.jorphan.tomcat.manager.Workers.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "----");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return org.apache.jorphan.tomcat.manager.impl.WorkersImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  3 :
                    if (("" == ___uri)&&("worker" == ___local)) {
                        context.pushAttributes(__atts);
                        goto1();
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  0 :
                    if (("" == ___uri)&&("worker" == ___local)) {
                        context.pushAttributes(__atts);
                        goto1();
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  3 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  2 :
                    if (("" == ___uri)&&("worker" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  3 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
                case  1 :
                    if (("" == ___uri)&&("stage" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("requestBytesSent" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("protocol" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("requestProcessingTime" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("requestBytesReceived" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("method" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("currentQueryString" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("remoteAddr" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("virtualHost" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("currentUri" == ___local)) {
                        _Worker.add(((org.apache.jorphan.tomcat.manager.impl.WorkerImpl) spawnChildFromEnterAttribute((org.apache.jorphan.tomcat.manager.impl.WorkerImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    break;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  3 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  3 :
                        revertToParentFromText(value);
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  2 :
                    state = 2;
                    return ;
            }
            super.leaveChild(nextState);
        }

        private void goto1()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 1;
            idx = context.getAttribute("", "requestBytesSent");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "stage");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "requestBytesReceived");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "requestProcessingTime");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "currentQueryString");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "virtualHost");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "protocol");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "currentUri");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "method");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "remoteAddr");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
