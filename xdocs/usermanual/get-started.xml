<?xml version="1.0"?>
<document>

<properties>
  <title>User's Manual: Getting Started</title>
</properties>

<body>

<section name="2. Getting Started">
</section>

<a name="requirements"/>
<section name="2.1 Requirements"></section>

<a name="java_versions"/>
<section name="2.1.1 Java Versions">
<p>JMeter runs in JDK1.2 and higher. </p>
</section>

<a name="os"/>
<section name="2.1.2 Operating Systems">
<p>JMeter has been tested and works under Unix (Solaris, Linux, etc) and Windows (98,
NT, 2000).  JMeter is a 100% Java application and should run correctly on any system
that has a compliant Java implementation.</p>
</section>

<a name="jdbc"/>
<section name="2.1.3 JDBC Driver (for testing databases)">
<p>If you intend to perform database testing, you will need a JDBC driver
appropriate for your database.  You will need to <a href="classpath">add the classes</a> for your
driver to JMeter's classpath.</p>
</section>

<a name="xml"/>
<section name="2.1.4 SAX XML Parser">
<p>JMeter comes packaged with Apache's Xerces XML parser.  There is no need to use any
other XML parser, but, it is possible to use any SAX2 compliant XML parser.  To do
so, include the classes for the third-party parser in <a href="classpath">JMeter's classpath</a>,
and update the <a href="configuring_jmeter.html">jmeter.properties</a> file with the full classname of the parser
implementation.
</p>
</section>

<a name="ssl"/>
<section name="2.1.5 SSL Encryption Support">
<p>To test a web server using SSL encryption (https), JMeter requires that an
implementation of SSL be provided (such as Sun's JSSE).  JMeter will run fine without
these files, but cannot be used to test an HTTPS site unless such files are included
in <a href="classpath">JMeter's classpath</a>.  In addition, <a href="configuring_jmeter.html">jmeter.properties</a>
must be configured correctly to register the SSL Provider.</p>
</section>

<a name="mail"/>
<section name="2.1.6 Email Support">
<p>JMeter has limited Email capabilities (it can send email based on test results).
To enable this support, it is necessary to add Sun's JavaMail packages to <a href="classpath">JMeter's classpath</a>.
</p>
</section>

<a name="install"/>
<section name="2.2 Installation">
</section>

<a name="download_latest"/>
<section name="2.2.1 Downloading the Latest Release">
<p>We recommend that most users run the latest stable release instead of a nightly build.
To install from a release build, simply unzip the zip/tar file into the directory
where you want JMeter to be installed.  Provided you have a JDK correctly installed,
and JAVA_HOME environment variable set, there is nothing more to do.</p>
</section>

<a name="download_nightly"/>
<section name="2.2.2 Downloading Nightly Builds">
<p>If you do not mind working with beta-quality software, then you can download and run the
latest nightly build.  To install from a nightly build, it is necessary to compile and
build JMeter.  To do so, unzip the zip/tar file into the directory where you want JMeter
to be installed.  Open a shell or command prompt and change directory to JMeter's top
level directory.  Type "build install" to install JMeter.  Provided your system has
a JDK correctly installed and the JAVA_HOME environment variable set, JMeter should
install correctly.</p>
</section>

<a name="run"/>
<section name="2.3 Running JMeter">
<p>To run JMeter, double-click on the jmeter.bat(Windows)/jmeter(Unix) file.  For most
systems this should be sufficient.  For some systems, it necessary to invoke this
file directly in a shell/command prompt (rather than double-clicking with the mouse). </p>

<p>If JMeter does not start correctly, it may be because your system does not support
the commands contained in jmeter.bat/jmeter (ie Windows 98 systems).  In this case,
 you will need to rewrite the jmeter.bat/jmeter file to explicitly include all
 jar files found in JMeter's lib/ directory in JMeter's classpath.</p>
</section>

<a name="classpath"/>
<section name="2.3.1 JMeter's Classpath">
<p>The jmeter.bat/jmeter file automatically adds all jar files found in JMeter's lib/
directory.  Because of this, if you need to add your own or third party jar files to
JMeter's classpath, it is only required that you copy them into JMeter's lib/
directory. </p>
</section>

<a name="proxy_server"/>
<section name="2.3.2 Using a Proxy Server">
<p>If you are testing a system behind a firewall, you may need to tell JMeter to
use a proxy server.  To do so, use the jmeter.bat/jmeter file from a command line to start
JMeter, and include two options:<br/>
-h [proxy server hostname or ip address]<br/>
-p [proxy server port]<br/>
<b>eg.</b>: jmeter -h my.proxy.server -p 8000
</p>
</section>

<a name="cl_only"/>
<section name="2.3.4 Non-GUI Mode">
<p>To run JMeter without the GUI, invoke the nongui.bat/nongui.sh files from the
command line, with the -o option (-o [name of *.jmx file that describes entire test script]).<br/>
<b>eg:</b> nongui -o my_test.jmx -h [proxy server] -p [proxy port]
</p>
</section>

</body>
</document>

